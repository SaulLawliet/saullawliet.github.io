#+TITLE: Bash 笔记
#+LANGUAGE: en
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/assets/css/org.css" />
#+OPTIONS: H:3 num:nil toc:t \n:nil @:t ::t |:t ^:nil -:t f:nil *:t TeX:nil LaTeX:nil skip:nil d:nil tags:not-in-toc

-----

* 基本
  - 基本语法介绍: [[https://devhints.io/bash][Bash scripting cheatsheet]], 推荐 *熟读* 或 *随手查阅*.
  - 脚本参数设计: [[http://docopt.org/][Command-line interface description language]]
  - 进阶书籍: [[https://github.com/dylanaraps/pure-bash-bible][Pure Bash Bible]], 真·大佬出品.

* 小提示
  - 使用变量时, 一定要用引号. 如: ~echo "$var"~
  - 声明函数时, 无需使用关键字 ~function~
  - 执行命令时, 用 ~$()~ 代替 ~` `~. 如: ~var="$(command "$(command)")"~

* 代码片段
  下面保存一些常用的代码, 提高开发效率;)

** 最小代码模板
   #+BEGIN_SRC sh
#!/usr/bin/env bash

main() {
  ...
}

main "$@"
   #+END_SRC

** 获取脚本的目录信息
   #+BEGIN_SRC sh
# 脚本真实链接
script_link="$(readlink -f "$0")"
printf '%s\n' "$script_link"

# 脚本所在目录
script_dir="$(dirname "$(readlink -f "$0")")"
printf '%s\n' "$script_dir"

# 脚本文件名
script_file="$(basename "$(readlink -f "$0")")"
printf '%s\n' "$script_file"
   #+END_SRC

** 从命令声明数组
   #+BEGIN_SRC sh
read -d "" -ra a1 <<< "$(seq 1 2)"
echo "${a1[@]}"
# output:
# 1 2

a2=("$(seq 1 5)")
echo "${a2[@]}"
# output:
# 1
# 2
   #+END_SRC

** 遍历文件的行
   #+BEGIN_SRC sh
while read -r line; do
    printf '%s\n' "$line"
done < "file"
   #+END_SRC

** 遍历文件和目录
   #+BEGIN_SRC sh
for file in *; do
    printf '%s\n' "$file"
done
   #+END_SRC

** 切换用户执行
#+BEGIN_SRC sh
su <other_user> << !
  ...
  exit
!
#+END_SRC
